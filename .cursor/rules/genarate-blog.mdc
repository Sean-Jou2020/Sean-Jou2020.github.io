---
alwaysApply: true
description: 주제를 입력받으면 웹 검색을 통해 최신 정보를 수집하고, pages/ 폴더의 예제 형식에 따라 블로그 게시글을 생성합니다.
---

# 블로그 게시글 생성 규칙

## 목적

사용자가 주제를 입력하면, 웹 검색을 통해 최신 정보를 수집하고 [example.md](mdc:pages/example.md) 형식에 맞춰 블로그 게시글을 생성합니다.

## 규칙

### 1. 웹 검색 의무화

- 주제가 주어지면 **반드시** 웹 검색을 통해 최신 정보를 수집해야 합니다
- **반드시 `mcp_tavily-mcp_tavily-search` 도구를 사용하여 최신 정보 검색** (이것만 사용)
- 검색 결과를 바탕으로 정확하고 최신의 내용을 작성해야 합니다
- 최소 5-10개의 검색 결과를 수집하여 다양한 관점을 확보

### 2. 파일 형식

블로그 게시글은 다음 형식을 따라야 합니다:

#### Front Matter (필수)

```yaml
---
title: "게시글 제목"
date: YYYY-MM-DD (현재 날짜 사용)
tags: ["태그1", "태그2", "태그3"]
category: "카테고리"
description: "게시글 설명 (50-100자)"
---
```

#### 본문 구조

- 제목: `# 주제명`
- 소개: 주제에 대한 간단한 소개 (2-3문단)
- 본문: 여러 섹션으로 나누어 작성
  - 각 섹션은 `##` 또는 `###`로 구분
  - 구체적이고 실용적인 정보 제공
- 코드 예제 (해당되는 경우)
- 결론 또는 요약

### 3. 작성 가이드

- **언어**: 한국어로 작성
- **글자 수**: 최소 500자 이상 (본문만)
- **구조**: 논리적으로 구성된 섹션으로 나누기
- **가독성**: 마크다운 문법 활용 (리스트, 강조, 인용문 등)
- **코드**: 필요한 경우 코드 블록 사용
- **링크**: 참고 자료 링크 포함

### 4. 검색 전략

- **tavily-search 사용 필수**: 항상 `mcp_tavily-mcp_tavily-search` 도구 사용
- 검색 파라미터 설정:
  - `query`: 주제 키워드 + "최신", "2024", "2025" 등
  - `max_results`: 10 (기본값 5보다 많게 설정)
  - `search_depth`: "advanced" (더 깊은 검색 수행)
- 여러 검색어 조합으로 검색하여 다양한 관점 확보
- 검색 결과의 URL을 본문에 인용 링크로 포함
- 공식 문서, 뉴스, 기술 블로그 등 다양한 출처 활용

### 5. 예제

사용자: "React Hooks 최신 기능에 대해 블로그 작성해줘"

처리:

1. **반드시 `mcp_tavily-mcp_tavily-search` 도구 사용하여 웹 검색 수행**: "React Hooks 최신 기능 2025"
2. 검색 결과 수집 및 분석 (최소 5-10개 결과)
3. 파일 생성: `pages/react-hooks-latest.md`
4. Front Matter 작성 (title, date, tags, category, description)
5. 본문 작성 (최신 정보 기반)
6. 코드 예제 포함
7. 참고 자료 링크 추가 (검색 결과의 출처 URL 포함)

## 주의사항

- 절대 허위 정보를 작성하지 말 것
- 출처가 불명확한 정보는 사용하지 말 것
- **최신 정보를 위해 `mcp_tavily-mcp_tavily-search` 도구만 사용하여 웹 검색 필수 수행**
- 검색 결과의 URL을 본문에 인용 링크로 포함하여 출처 명시
- 사용자가 주제만 제공한 경우, 주제에 대한 컨텍스트 파악 후 적절한 카테고리와 태그 부여
- 다른 웹 검색 도구(`web_search` 등)는 사용하지 말 것

## 필수사항항

블로그 글을 작성하고 나서 항상 `node .github/scripts/generate-posts.js`를 실행하여 posts.json 파일을 생성하세요.
